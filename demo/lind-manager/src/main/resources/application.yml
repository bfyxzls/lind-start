server.port: 81
spring:
  application.name: lind-manager
  freemarker:
    suffix: .ftl                                 # 设置模板后缀名
    content-type: text/html                      # 设置文档类型
    charset: UTF-8                               # 设置页面编码格式
    cache: false                                 # 设置页面缓存
    template-loader-path: classpath:/templates   # 设置ftl文件路径
  mvc:
    static-path-pattern: /static/**         # 设置静态文件路径，js,css等,http://localhost:81/static/js/admin.js
ribbon:
  #ribbon请求连接的超时时间- 限制3秒内必须请求到服务，并不限制服务处理的返回时间
  connectTimeout: 1000
  #请求处理的超时时间 下级服务响应最大时间,超出时间消费方（路由也是消费方）返回timeout,超时时间不可大于断路器的超时时间
  readTimeout: 2000
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          strategy: THREAD #信号量模式，无超时时间；THREAD线程池模块，这是默认的
          thread:
            timeoutInMilliseconds: 3000 #对THREAD模式才有效
feign:
  hystrix:
    # Feign启用断路器，默认为FALSE，如果开启熔断，如果是线程池模式，会在新线池中发起请求，这时MDC无论获取到，如果是SEMAPHORE模式，是可以获取到MDC的
    enabled: true

#Apollo 配置
#app:
#  id: apollo-spring-test                            #应用ID
#apollo:
#  cacheDir: /d/apollo/                       #配置本地配置缓存目录
#  cluster: default                           #指定使用哪个集群的配置
#  meta: http://192.168.1.109:28080          #DEV环境配置中心地址
#  autoUpdateInjectedSpringProperties: true   #是否开启 Spring 参数自动更新
#  bootstrap:
#    enabled: true                            #是否开启 Apollo
#    namespaces: application                  #设置 Namespace
#    eagerLoad:
#      enabled: false                         #将 Apollo 加载提到初始化日志系统之前

openai:
  domain: "https://api.openai.com"
  keys:
    - key: "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"
      weight: 1.0
      enabled: true
  proxy:
    host: "127.0.0.1"
    port: 10809
    type: http
    header-name: "Proxy-Authorization"
  connect-timeout: 1m
  read-timeout: 1m
  write-timeout: 1m
  urls:
    moderations: "https://api.openai.com/v1/moderations"
    completions: "https://api.openai.com/v1/completions"
    edits: "https://api.openai.com/v1/edits"
    chat-completions: "https://api.openai.com/v1/chat/completions"
    list-models: "https://api.openai.com/v1/models"
    retrieve-model: "https://api.openai.com/v1/models/{model}"
    embeddings: "https://api.openai.com/v1/embeddings"
    list-files: "https://api.openai.com/v1/files"
    upload-file: "https://api.openai.com/v1/files"
    delete-file: "https://api.openai.com/v1/files/{file_id}"
    retrieve-file: "https://api.openai.com/v1/files/{file_id}"
    retrieve-file-content: "https://api.openai.com/v1/files/{file_id}/content"
    create_fine_tune: "https://api.openai.com/v1/fine-tunes"
    list_fine_tune: "https://api.openai.com/v1/fine-tunes"
    retrieve_fine_tune: "https://api.openai.com/v1/fine-tunes/{fine_tune_id}"
    cancel_fine_tune: "https://api.openai.com/v1/fine-tunes/{fine_tune_id}/cancel"
    list_fine_tune_events: "https://api.openai.com/v1/fine-tunes/{fine_tune_id}/events"
    delete_fine_tune_events: "https://api.openai.com/v1/models/{model}"
    create-transcription: "https://api.openai.com/v1/audio/transcriptions"
    create-translation: "https://api.openai.com/v1/audio/translations"
    create_image: "https://api.openai.com/v1/images/generations"
    create_image_edit: "https://api.openai.com/v1/images/edits"
    create_image_variation: "https://api.openai.com/v1/images/variations"
    billing-credit-grants: "https://api.openai.com/dashboard/billing/credit_grants"
    users: "https://api.openai.com/v1/organizations/{organizationId}/users"
    billing-subscription: "https://api.openai.com/v1/dashboard/billing/subscription"
    billing-usage: "https://api.openai.com/v1/dashboard/billing/usage?start_date={start_date}&end_date={end_date}"
